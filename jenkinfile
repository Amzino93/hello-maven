pipeline {
    agent any 
    stages {
        stage('Validate mavn project') { 
            steps {
                sh "mvn validate"
            }
        }
        stage('Run clean install') { 
            steps {
                echo "mvn clean install"
            }
        }
        stage('Run maven test') { 
            steps {
                sh "mvn test"
            }
        }
        stage('Sonarqube test') { 
            environment {
                scannerHome = tool 'ibt-sonarqube';
            }
            steps {
                withSonarQubeEnv(credentialsId:'SQ-student', installationName: 'IBT sonarqube') {
                    sh "S{scannerHome}/bin/sonar-scanner"
            }
        }
        stage('OWSAP Dependency-Check Vulnerabilities') { 
            steps {
                dependencyCheck additionalArguments: '''
                   -o "./"
                   -s "./"
                   -f "ALL"
                   --prettyPrint''', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }
            stage('Push package to Registtry') {
                steps {
                    configFileProvider([configFile(fileId: '5d0920bc-97c5-4877-8aa4-2f61975fa9fc', variable: 'MAVEN_SETTINGS_XML')]) {
                        sh 'mvn -U --batch-mode -s $MAVEN_SETTINGS_XML clean deploy'
                    }
                }
            }
        }
    }
}
